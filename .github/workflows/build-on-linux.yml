name: "Build On Linux"

on: # @see https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  push:
    branches: # Array of patterns that match refs/heads
      - master # Push events on master branch
      - dev
    tags:
      - "*"

jobs:
  build: # job id, can be any string
    # Job name is Build And Publish
    name: Build
    # This job runs on Linux
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        target: [
            aarch64-unknown-linux-gnu,
            arm-unknown-linux-gnueabi,
            armv7-unknown-linux-gnueabihf,
            i686-unknown-linux-gnu,
            #mips-unknown-linux-gnu,
            #mipsel-unknown-linux-gnu,
            #mips64-unknown-linux-gnuabi64,
            #mips64el-unknown-linux-gnuabi64,
            #powerpc-unknown-linux-gnu,
            #powerpc64-unknown-linux-gnu,
            #powerpc64le-unknown-linux-gnu,
            x86_64-unknown-linux-gnu,
            #aarch64-unknown-linux-musl,
            #arm-unknown-linux-musleabihf,
            #arm-unknown-linux-musleabi,
            #armv7-unknown-linux-musleabihf,
            i686-unknown-linux-musl,
            #mips-unknown-linux-musl,
            #mipsel-unknown-linux-musl,
            x86_64-unknown-linux-musl,
            aarch64-linux-android,
            arm-linux-androideabi,
            armv7-linux-androideabi,
            i686-linux-android,
            x86_64-linux-android,
            x86_64-unknown-netbsd,
            #x86_64-unknown-freebsd,
            x86_64-sun-solaris,
          ]
    runs-on: ${{ matrix.os }}
    env:
      VCPKGRS_DYNAMIC: 1
      OPENSSL_STATIC: 1
      CROSS_DOCKER_IN_DOCKER: "true"
      PKG_CONFIG_ALLOW_CROSS: 1
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}
          targets: x86_64-unknown-linux-gnu
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build
        shell: bash
        run: |
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-gnu" ]]; then
            rustup target add ${{ matrix.target }} ;
            rustup toolchain install stable-${{ matrix.target }} ;
            env PKG_CONFIG_ALL_STATIC=1 cargo build --release --verbose --target ${{ matrix.target }} ;
          else
            cargo install xargo --force ;
            cargo install cross --force ;
            cross build --target ${{ matrix.target }} --release --verbose ;
          fi
          if [[ -e "target/${{ matrix.target }}/release/etc" ]]; then
            rm -rf "target/${{ matrix.target }}/release/etc";
          fi
          if [[ -e "target/${{ matrix.target }}/release/tools" ]]; then
            rm -rf "target/${{ matrix.target }}/release/tools";
          fi
          cp -rf etc tools "target/${{ matrix.target }}/release"/ ;
          cd "target/${{ matrix.target }}/release/";
          mkdir -p bin;
          if [[ -e wxwork_robotd ]]; then
            cp -f wxwork_robotd bin/wxwork_robotd;
          else
            cp -f wxwork_robotd* bin/;
          fi
          tar -zcvf ${{ matrix.target }}.tar.gz etc bin tools;
          cp -f ../../../Dockerfile ./;
          if [[ "${{ matrix.target }}" == "x86_64-unknown-linux-musl" ]] && [[ "xtag" != "x$GITHUB_EVENT_NAME" ]]; then
            TAG_NAME=${GITHUB_REF//*\/};
            echo "Trigger by tag -> $TAG_NAME";
            which docker || true;
            # echo "$DOCKER_TOKEN" | docker login -u "owt5008137" --password-stdin docker.io
            # docker build --force-rm --tag docker.io/owt5008137/wxwork_robotd:latest .
            # docker tag docker.io/owt5008137/wxwork_robotd:latest docker.io/owt5008137/wxwork_robotd:$TAG_NAME
            # docker push docker.io/owt5008137/wxwork_robotd:latest
            # docker push docker.io/owt5008137/wxwork_robotd:$TAG_NAME
          else
            echo "Trigger by $GITHUB_EVENT_NAME -> $GITHUB_REF";
          fi
          cd ../../..;
          mv -f "target/${{ matrix.target }}/release/${{ matrix.target }}.tar.gz" ./;
      - name: Run tests
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          cargo test --release --verbose --target ${{ matrix.target }}
